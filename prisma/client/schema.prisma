// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  output        = "./client"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 用户
model User {
  id         Int        @id @default(autoincrement()) @db.UnsignedInt()
  name       String
  account    String     @unique
  password   String
  avatar     String
  status     Boolean
  gender     String
  birthday   String
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  UserRole   UserRole[]
}

// 用户角色
model Role {
  id             Int              @id @default(autoincrement()) @db.UnsignedInt()
  name           String           @unique
  creator        String
  remark         String?
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  RolePermission RolePermission[]
  UserRole       UserRole[]
}

// 角色權限
model Permission {
  id         Int              @id @default(autoincrement()) @db.UnsignedInt()
  name       String           @unique
  creator    String
  remark     String?
  created_at DateTime         @default(now())
  updated_at DateTime         @updatedAt
  Role       RolePermission[]
}

// 用户角色關聯表
model UserRole {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt()
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int      @db.UnsignedInt()
  role       Role     @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId     Int      @db.UnsignedInt()
  created_at DateTime @default(now())
}

// 角色權限關聯表
model RolePermission {
  id           Int        @id @default(autoincrement()) @db.UnsignedInt()
  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId       Int        @db.UnsignedInt()
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  permissionId Int        @db.UnsignedInt()
  created_at   DateTime   @default(now())
  updated_at   DateTime   @updatedAt
}

// ----------------------------------------------------------
// -------------------------Line-----------------------------
// ----------------------------------------------------------

model LineUser {
  id                  String             @id
  displayName         String?
  pictureUrl          String?
  status              Boolean?
  callback            String?
  url                 String?
  type                String?
  nike_broadcast      Boolean?
  hypebeast_broadcast Boolean?
  ithome_broadcast    Boolean?
  created_at          DateTime           @default(now())
  updated_at          DateTime           @updatedAt
  category            LineUserCategory[]
  Article             LineUserArticle[]
}

model LineUserArticle {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt()
  url        String
  type       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  author     LineUser @relation(fields: [authorId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  authorId   String
}

model LineUserCategory {
  id         String   @id
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  author     LineUser @relation(fields: [authorId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  authorId   String
}

// ----------------------------------------------------------
// -------------------------爬蟲--------------------------
// ----------------------------------------------------------
model NikeList {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt()
  title      String
  descs      String?
  img        String   @db.VarChar(1000)
  link       String   @db.VarChar(500)
  time       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model HypeBeastList {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt()
  title      String
  descs      String?
  img        String   @db.VarChar(1000)
  link       String
  time       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model IthomeList {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt()
  title      String
  descs      String?
  img        String   @db.VarChar(1000)
  link       String
  time       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
